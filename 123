const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const cors = require('cors');
const sequelize = require('./db');
const User = require('./models');
const { stringify } = require('querystring');
const token = '5418338099:AAGR1Ful4ebQQYdfIGzbkQxmdjEUYnzE1uk';
const webAppUrl = 'https://ornate-selkie-c27577.netlify.app';

const bot = new TelegramBot(token, {polling: true});
const app = express();

app.use(express.json());
app.use(cors());

const start = async () => {

    try{
        await sequelize.authenticate()
        await sequelize.sync()   
        console.log('Соединение с БД было успешно установлено')
        await bot.on('message', async (msg) => {
            const chatId = msg.chat.id;
            const text = msg.text;
            const allUsers = await User.findAll({
                attributes: ['id', 'name'],
              }) 
            if(text === '/start') {
                await bot.sendMessage(chatId, `<b>Rencore  Tis</b>\n` + 
                'Ваша личная учетная система. \n\n Выберите из меню, чем я могу Вам помочь',
                // {parse_mode: 'HTML'}, 
                {
                    reply_markup: {
                        keyboard: [
                            [{text: 'Заполнить форму', web_app: {url: webAppUrl + '/form'}}],
                            [{text: 'Посмотреть список установок', web_app: {url: webAppUrl + '/form'}}],
                            [{text: 'Посмотреть список сотрудников'}]
                        ]
                    }
                });
    
                await bot.sendMessage(chatId, 'Выберите одну из кнопок ниже', {
                    reply_markup: {
                        inline_keyboard: [
                            [{text: 'Посмотреть список установок', web_app: {url: webAppUrl}}],
                            [{text: 'Посмотреть список сотрудников', web_app: {url: webAppUrl}}]
                        ]
                    }
                })
            }


            // bot.on('callback_query', msg => {
            //     if (msg.data == `Посмотреть список сотрудников`) {
            //       bot.editMessageText(`?`, {
            //         parse_mode: 'Markdown',
            //         message_id: msg.message.message_id,
            //         chat_id: msg.message.chat.id,
            //         reply_markup: {
            //           inline_keyboard: [[{
            //             text: tg.,
            //             callback_data: allUsers
            //           }]]
            //         }
            //       })
            //     }})


            if(text === 'Посмотреть список сотрудников') {
                // const user = await User.findAll()
                // return bot.sendMessage(chatId, `Тебя зовут ${allUsers}`);
                // (allUsers.map(userFullnames =>
                //     [{ text: userFullnames.name ,callback_data: userFullnames.id}]
                //  ))
                // console.log(userFullnames);
                try {
                    return bot.sendMessage( chatId, 'Ваши данные'+ allUsers.map(userFullnames => (`\n${userFullnames.id}  ${userFullnames.name} ` )))
                } catch (err) {
                    console.log(err);
                  }
                // console.log(allUsers.map(userFullnames => (`${userFullnames.id} \n ${userFullnames.name}`)));
            }

            

            // if(msg?.web_app_data?.data) {
            //     try {
            //         const data = JSON.parse(msg?.web_app_data?.data)
            //         console.log(data)
            //         await bot.sendMessage(chatId, 'Спасибо за обратную связь!')
            //         await bot.sendMessage(chatId, 'Ваша страна: ' + data?.country);
            //         await bot.sendMessage(chatId, 'Ваша улица: ' + data?.street);
    
            //         setTimeout(async () => {
            //             await bot.sendMessage(chatId, 'Всю информацию вы получите в этом чате');
            //         }, 3000)
            //     } catch (e) {
            //         console.log(e);
            //     }
            // }
           
            // await sequelize.query(insert)
        });
    } catch (e){
        console.log('Подключение к бд сломалось', e)
    }

    
}

    

// app.post('/web-data', async (req, res) => {
//     const {queryId, products = [], totalPrice} = req.body;
//     try {
//         await bot.answerWebAppQuery(queryId, {
//             type: 'article',
//             id: queryId,
//             title: 'Успешная покупка',
//             input_message_content: {
//                 message_text: ` Поздравляю с покупкой, вы приобрели товар на сумму ${totalPrice}, ${products.map(item => item.title).join(', ')}`
//             }
//         })
//         return res.status(200).json({});
//     } catch (e) {
//         return res.status(500).json({})
//     }
// })

const PORT = 8000;
start();
app.listen(PORT, () => console.log('server started on PORT ' + PORT))